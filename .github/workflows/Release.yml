name: Build & Release Fyne App

on:
  workflow_dispatch:

jobs:
  set-tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      tag: ${{ steps.set-tag.outputs.tag }}
    steps:
      - name: Set tag as timestamp
        id: set-tag
        run: |
          TAG="v$(date +'%Y%m%d%H%M%S')"
          echo "tag=$TAG" >> $GITHUB_OUTPUT

  create-release:
    needs: set-tag
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      tag: ${{ needs.set-tag.outputs.tag }}
    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.set-tag.outputs.tag }}
          name: KetQuaXoSo Build ${{ needs.set-tag.outputs.tag }}
          draft: true
          body: |
            Build: KetQuaXoSo App
            Platforms: Windows, Linux, Android
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: [set-tag, create-release]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        os: [windows, linux, android]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.25.1'

      - name: Install Fyne CLI
        run: |
          go install fyne.io/fyne/v2/cmd/fyne@latest
          go install github.com/swaggo/swag/cmd/swag@latest

      - name: Build for ${{ matrix.os }}
        env:
          GOOS: ${{ matrix.os }}
        run: |
          swag init -g internal/api/api.go --output docs
          echo "Building for $GOOS"
          if [ "$GOOS" = "windows" ]; then
              sudo apt-get update && sudo apt-get install -y mingw-w64
              make windows
          elif [ "$GOOS" = "linux" ]; then
              sudo apt-get update && sudo apt-get install -y build-essential pkg-config libgl1-mesa-dev xorg-dev libx11-dev gcc-aarch64-linux-gnu
              make linux
          elif [ "$GOOS" = "android" ]; then
              make android
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: KetQuaXoSo-${{ matrix.os }}
          path: |
            out/*

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.create-release.outputs.tag }}
          files: |
            ./out/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
