name: Build & Release Fyne App

on:
  workflow_dispatch:

jobs:
  set-tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.set-tag.outputs.tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set tag as timestamp and push
        id: set-tag
        run: |
          TAG="v$(date +'%Y%m%d%H%M%S')"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git tag $TAG
          git push origin $TAG
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-release:
    needs: set-tag
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.set-tag.outputs.tag }}
          name: KetQuaXoSo Build ${{ needs.set-tag.outputs.tag }}
          draft: true
          body: |
            Build: KetQuaXoSo App
            Platforms: Windows, Linux, Android
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: set-tag
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [windows, linux, android]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.25.1'

      - name: Install Fyne CLI
        run: go install fyne.io/fyne/v2/cmd/fyne@latest

      - name: Build for ${{ matrix.os }}
        env:
          GOOS: ${{ matrix.os }}
        run: |
          if [ ! -f ./main.go ]; then
              ln -s ./cmd/gui/main.go ./main.go
          fi
          echo "Building for $GOOS"
          if [ "$GOOS" = "windows" ]; then
              sudo apt-get update && sudo apt-get install -y mingw-w64
              CC=x86_64-w64-mingw32-gcc fyne package \
                  --os windows \
                  --icon $(pwd)/assets/Icon.png \
                  --name="KetQuaXoSo" \
                  --id=com.dopaemon.ketquaxoso \
                  --release
          elif [ "$GOOS" = "linux" ]; then
              sudo apt-get update && sudo apt-get install -y build-essential pkg-config libgl1-mesa-dev xorg-dev libx11-dev
              fyne package \
                  --os linux \
                  --icon $(pwd)/assets/Icon.png \
                  --name="KetQuaXoSo" \
                  --id=com.dopaemon.ketquaxoso \
                  --release
          elif [ "$GOOS" = "android" ]; then
              fyne package \
                  --os android \
                  --name="KetQuaXoSo" \
                  --id=com.dopaemon.ketquaxoso \
                  --icon $(pwd)/assets/Icon.png \
                  --release

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: KetQuaXoSo-${{ matrix.os }}
          path: |
            KetQuaXoSo
            KetQuaXoSo.*

  upload-to-release:
    needs: [build, create-release]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: KetQuaXoSo-windows
          path: ./artifacts/windows

      - uses: actions/download-artifact@v4
        with:
          name: KetQuaXoSo-linux
          path: ./artifacts/linux

      - uses: actions/download-artifact@v4
        with:
          name: KetQuaXoSo-android
          path: ./artifacts/android

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.set-tag.outputs.tag }}
          files: |
            ./artifacts/windows/*
            ./artifacts/linux/*
            ./artifacts/android/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
